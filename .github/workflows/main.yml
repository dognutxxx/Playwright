name: Firebase Deployment
on:
  push:
    branches:
      - main
    release:
      types: [published]
jobs:
  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   needs: [test]
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2.3.2
  #     - name: Install Dependencies
  #       run: npm install
  #     - name: Build
  #       env:
  #         CI: true
  #       run: npm run build
  #     - name: Archive Production Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: build
  #         path: build
  # deploy:
  #   name: Deploy
  #   needs: [test, build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2.3.2
  #     - name: Download Artifact3
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build
  #         path: build
  #     - name: Deploy to Firebase
  #       uses: w9jds/firebase-action@master
  #       with:
  #         args: deploy --only hosting
  #       env:
  #         FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  # test:
  #   timeout-minutes: 60
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Install Playwright Browsers
  #       run: npx playwright install --with-deps
  #     - name: Run Playwright tests
  #       run: npx playwright test
  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Build and Push Docker Image
  #       uses: mr-smithers-excellent/docker-build-push@v4
  #       with:
  #         image: arnonprommoon/docker
  #         registry: docker.io
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: my-docker-hub-namespace/my-docker-hub-repository
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        
